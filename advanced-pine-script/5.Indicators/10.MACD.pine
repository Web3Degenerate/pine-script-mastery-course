// https://courses.theartoftrading.com/courses/take/pine-script-mastery/lessons/29955384-macd

// @version=5
indicator("HMD MACD")

// Get user input
// Get MACD parameters from user
fast_length     = input(title="Fast Length", defval=12)
slow_length     = input(title="Slow Length", defval=26)
src             = input(title="Source", defval=close)
signal_length   = input.int(title="Signal Smoothing", minval=1, maxval=50, defval=9)
sma_source      = input.string(title="Oscillator MA Type", defval="EMA", options=["SMA", "EMA"])
sma_signal      = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"])

// Get input colors
col_macd        = input(#2962FF, "MACD Line", group="Color Settings", inline="MACD")
col_signal      = input(#FF6D00, "Signal Line", group="Color Settings", inline="Signal")
col_grow_above  = input(#26A69A, "Above: Grow", group="Histogram", inline="Above")
col_fall_above  = input(#B2DFDB, "Fall", group="Histogram", inline="Above")
col_grow_below  = input(#FFCDD2, "Below: Grow", group="Histogram", inline="Below")
col_fall_below  = input(#FF5252, "Fall", group="Histogram", inline="Below")

// Calculate MACD
// Calculates fast_ma using either sma or ema from 'Oscillator MA Type' drop-down menu: 
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
//histogram is the bar plot of the difference b/t blue line and orange line
hist = macd - signal

// Check for zero-point crosses
// whenever green line crosses over zero ('crossUp') we get green bar.
crossUp = ta.crossover(macd, 0)
crossDown = ta.crossunder(macd, 0)
// To set the crossUp on macd OVER the lines (blue(macd)/orange(signal)) instead of zero (0) swap in the signal instead of 0 
    // crossUp = ta.crossover(macd, signal)
    // crossDown = ta.crossunder(macd, signal)
bgcolor(crossUp ? color.green : na)
bgcolor(crossDown ? color.red : na)

// Draw MACD
plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
plot(macd, title="MACD", color=col_macd)
plot(signal, title="Signal", color=col_signal)

// Generate alerts
alertcondition(crossUp, title="MACD Alert Up", message="MACD Crossed Above Zero")
alertcondition(crossDown, title="MACD Alert Down", message="MACD Crossed Below Zero")